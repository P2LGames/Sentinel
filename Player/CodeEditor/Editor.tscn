[gd_scene load_steps=7 format=2]

[ext_resource path="res://Player/CodeEditor/Editor.gd" type="Script" id=1]
[ext_resource path="res://Player/CodeEditor/TextEditor.gd" type="Script" id=2]
[ext_resource path="res://Assets/Fonts/NunitoBody.tres" type="DynamicFont" id=3]
[ext_resource path="res://Player/OutputText.tscn" type="PackedScene" id=4]

[sub_resource type="StyleBoxEmpty" id=1]

[sub_resource type="GDScript" id=2]
script/source = "extends TextEdit


func add_output(printMessage):
	# Add the text to the text edit
	insert_text_at_cursor(printMessage.message)
	
	# Move the cursor to the end, this will move the viewport down
	cursor_set_line(get_line_count())
	
	# TODO: Color the text depending on the type


func set_output(output: Array):
	# Clear the current text
	text = \"\"
	
	# Loop through each message in the output and add it to the text edit
	for message in output:
		add_output(message)


\"\"\" SIGNALS \"\"\"

func _on_TargetEntity_print_message(printMessage):
	add_output(printMessage)



"

[node name="Editor" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 190.0
script = ExtResource( 1 )

[node name="TextEditor" type="TextEdit" parent="."]
anchor_right = 1.0
anchor_bottom = 0.8
margin_right = 1.948
highlight_current_line = true
syntax_highlighting = true
show_line_numbers = true
breakpoint_gutter = true
highlight_all_occurrences = true
smooth_scrolling = true
hiding_enabled = 1
script = ExtResource( 2 )

[node name="OutputArea" type="Control" parent="."]
anchor_top = 0.8
anchor_right = 1.0
anchor_bottom = 1.0

[node name="OutputLabel" type="Label" parent="OutputArea"]
margin_left = -0.40918
margin_right = 48.5908
margin_bottom = 23.0
custom_fonts/font = ExtResource( 3 )
text = "Output"

[node name="OutputText" parent="OutputArea" instance=ExtResource( 4 )]
custom_styles/read_only = SubResource( 1 )
script = SubResource( 2 )
[connection signal="cursor_changed" from="TextEditor" to="." method="_on_TextEditor_cursor_changed"]
[connection signal="text_changed" from="TextEditor" to="TextEditor" method="_on_TextEditor_text_changed"]
[connection signal="text_changed" from="TextEditor" to="." method="_on_TextEditor_text_changed"]
